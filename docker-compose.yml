version: '3.8'


services:
  db:
    image: postgres:latest
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s
    env_file:
      - .env
    networks:
      - fitapp_network


  backend:
    build: ./backend
    container_name: django_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy  # Wait for the DB to be ready
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles  # Persist static files
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - fitapp_network


  frontend:
    build: ./frontend
    container_name: react_frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - fitapp_network

volumes:
  postgres_data:
  static_volume:

networks:
  fitapp_network:
